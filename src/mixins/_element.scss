@charset "UTF-8";

/// Element selector, that is generated from parent block
///
/// @param {String} $element - Name of element that will come after ".[block]__"
/// @param {Boolean} $nested [false] - If element is nested with other element
///
/// @example scss - Usage
///     @include block('list') {
///         @include element('item') {
///             color: black;
///         }
///     }
///
///     @include b('list') {
///         @include e('item') {
///             color: black;
///         }
///     }
///
///     @include b('list') {
///         @include e('item') {
///             @include ee('link') {
///                 color: black;
///             }
///         }
///     }
///
///     @include b('list') {
///         @include e(('item', 'link')) {
///             color: black;
///         }
///     }
///
/// @example css - Output
///     .list__item {
///         color: black;
///     }
///
///     .list__item {
///         color: black;
///     }
///
///     .list__item__link {
///         color: black;
///     }
///
///     .list__item, .list__link {
///         color: black;
///     }

@mixin element($element, $nested: false) {
  @at-root {
    #{element-selector($element, $nested)} {
      @if $bem-debug == true {
        outline: 5px solid #635270;
      }

      @content;
    }
  }
}

/// @alias element

@mixin e($element, $nested: false) {
  @include element($element, $nested) {
    @content;
  }
}

/// @alias element

@mixin ee($element) {
  @include element($element, true) {
    @content;
  }
}
