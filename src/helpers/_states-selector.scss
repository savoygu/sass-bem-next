@charset "UTF-8";
@use "sass:string";

/// Pseudo selector with end of hover.
///
/// @access private
///
/// @returns {String} - &:hover
///
/// @see {mixin} hover

@function hover-selector() {
  @return string.unquote("&:hover");
}

/// Pseudo selector with end of focus.
///
/// @access private
///
/// @returns {String} - &:focus
///
/// @see {mixin} focus

@function focus-selector() {
  @return string.unquote("&:focus");
}

/// Pseudo selector with end of active.
///
/// @access private
///
/// @returns {String} - &:active
///
/// @see {mixin} active

@function active-selector() {
  @return string.unquote("&:active");
}

/// Pseudo selector with end of link.
///
/// @access private
///
/// @returns {String} - &:link
///
/// @see {mixin} link

@function link-selector() {
  @return string.unquote("&:link");
}

/// Pseudo selector with end of visited.
///
/// @access private
///
/// @returns {String} - &:visited
///
/// @see {mixin} visited

@function visited-selector() {
  @return string.unquote("&:visited");
}

/// Pseudo selector with end of checked.
///
/// @access private
///
/// @returns {String} - &:checked
///
/// @see {mixin} checked

@function checked-selector() {
  @return string.unquote("&:checked");
}

/// Selector with state of disabled.
///
/// @access private
///
/// @returns {String} - &[disabled]
///
/// @see {mixin} disabled

@function disabled-selector() {
  @return string.unquote("&[disabled]");
}

/// Selector with state of readonly.
///
/// @access private
///
/// @returns {String} - &[readonly]
///
/// @see {mixin} readonly

@function readonly-selector() {
  @return string.unquote("&[readonly]");
}

/// Selector with state of contenteditable.
///
/// @access private
///
/// @returns {String} - &[contenteditable='true']
///
/// @see {mixin} contenteditable

@function contenteditable-selector() {
  @return string.unquote("&[contenteditable='true']");
}

/// @alias contenteditable-selector

@function editable-selector() {
  @return contenteditable-selector();
}
